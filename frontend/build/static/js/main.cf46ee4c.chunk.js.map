{"version":3,"sources":["components/common/Navbar.js","lib/api.js","components/images/UploadImage.js","components/common/Home.js","components/images/LiveEffects.js","components/images/LiveEffectChecks.js","components/images/Filters.js","components/images/MemeView.js","components/images/SaveImage.js","components/images/ImageEdit.js","App.js","index.js"],"names":["Navbar","className","to","imageUpload","uploadUrl","data","axios","post","postURL","url","height","width","getSingleImage","imageId","get","previewFilter","UploadImage","handleChange","React","useState","loading","setLoading","handleUpload","event","a","FormData","append","target","files","process","res","type","onChange","active","spinner","styles","base","stroke","Home","history","useHistory","imageData","setImageData","useEffect","push","id","console","log","response","handlePost","LiveEffects","liveChange","feedback","reset","value","checked","name","parseFloat","step","min","max","blur","brightness","contrast","enhance","hue","saturation","luminance","embossStrength","LiveEffectsChecks","sepiaActive","invertActive","grayscaleActive","embossActive","Filters","handleImageChange","handleIconChange","setPreviewLoading","thumbnails","setThumbnails","requestPage","setRequestPage","filterType","setFilterType","leftArrowDisabled","setLeftArrowDisabled","rightArrowDisabled","setRightArrowDisabled","changePage","currentTarget","changeFilterType","filter","page","sendThumbnailRequest","preview","filter_type","filter_options","alt","image","onClick","map","thumbnail","src","option","key","draggable","onDragStart","MemeView","handleClose","base64","topText","setTopText","bottomText","setBottomText","sendPostRequest","text","toUpperCase","placeholder","SaveImage","setImage","embedCopySuccess","setEmbedCopySuccess","urlCopySuccess","setUrlCopySuccess","embedRef","useRef","urlRef","secure_url","copyToClipboard","current","select","document","execCommand","setTimeout","style","readOnly","ref","triggerBase64Download","URLImage","useImage","img","x","y","ImageEdit","useParams","b64","setB64","setWidth","setHeight","setUrl","im","dataURL","setDataURL","showSave","setShowSave","setShowRevert","showUndoSaveBtns","setUndoSaveBtns","stageRef","imageRef","images","setImages","dragUrl","iconRef","previewLoading","alpha","liveEffect","setliveEffect","appliedEffect","setAppliedEffect","defaultEffect","meme","setMeme","getImage","cache","getLayer","batchDraw","imageChange","handleLiveChange","resetEffects","toDataURL","handleSaveImage","onDrop","setPointersPositions","concat","getPointerPosition","onDragOver","preventDefault","onMouseEnter","onMouseLeave","filters","Konva","Blur","Brighten","Contrast","Enhance","HSL","Sepia","Emboss","Grayscale","Invert","blurRadius","i","LiveEffectChecks","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cf46ee4c.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">Filtr</Link>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar","import axios from 'axios'\n\nconst baseUrl = '/api'\n\n\n// * Send Image to Cloudinary\nexport const imageUpload = (uploadUrl, data) => {\n  return axios.post(uploadUrl, data)\n}\n\n//* Post URL to backend\n\nexport const postURL = ({ url, height, width }) => {\n  return axios.post(`${baseUrl}/images/`, { url, width, height })\n}\n\n//* get Single Image\nexport const getSingleImage = imageId => {\n  return axios.get(`${baseUrl}/images/${imageId}/`)\n}\n\n//* get thumbnails\n\nexport const getThumbnails = data => {\n  return axios.post(`${baseUrl}/images/thumbnails/`, data)\n}\n\n//* send preview filter request\n\nexport const previewFilter = data => {\n  return axios.post(`${baseUrl}/images/`, data)\n}","import React from 'react'\nimport { imageUpload } from '../../lib/api'\nimport LoadingOverlay from 'react-loading-overlay'\nimport Loader from 'react-spinners/BarLoader'\n\nconst uploadUrl = process.env.REACT_APP_IMAGE_UPLOAD_URL\nconst uploadPreset = process.env.REACT_APP_IMAGE_UPLOAD_PRESET\n\n\nfunction UploadImage({ handleChange }) {\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleUpload = async event => {\n    setLoading(true)\n    const data = new FormData()\n    data.append('file', event.target.files[0])\n    data.append('upload_preset', uploadPreset)\n    const res = await imageUpload(uploadUrl, data)\n    handleChange(res.data)\n  }\n\n  return (\n    <div className=\"box\">\n      <section className=\"Home columns\">\n        <div className=\"left-side column\">\n          <div className=\"img-one\"></div>\n          <div className=\"filtr-one\"></div>\n          <div className=\"img-two\"></div>\n          <div className=\"filtr-two\"></div>\n          <div className=\"img-three\"></div>\n          <div className=\"filtr-three\"></div>\n        </div>\n        <div className=\"right-side column columns is-multiline\">\n          <div className=\"column right-top is-full\">\n            <h1>Filtr</h1>\n            <h2>Create Beautiful Images Instantly</h2>\n          </div>\n          <div className=\"right-btm column is-full\">\n            {!loading &&\n              <label className=\"upload\">\n                Upload an Image\n                <input\n                  className=\"input\"\n                  type=\"file\"\n                  onChange={handleUpload}\n                />\n              </label>}\n            {loading &&\n              <LoadingOverlay\n                active={loading}\n                spinner={<Loader />}\n                styles={{\n                  spinner: (base) => ({\n                    ...base,\n                    width: '100px',\n                    '& svg circle': {\n                      stroke: 'rgba(0, 0, 0, 1)'\n                    }\n                  })\n                }}\n                className=\"loading\"\n              >\n              </LoadingOverlay>\n            }\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default UploadImage","import React from 'react'\nimport { postURL } from '../../lib/api'\nimport UploadImage from '../images/UploadImage'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Home() {\n  const history = useHistory()\n  const [imageData, setImageData] = React.useState(null)\n\n  const handleImageChange = data => {\n    const { url, width, height } = data\n    setImageData({\n      url,\n      width,\n      height\n    })\n  }\n\n  React.useEffect(() => {\n    const handlePost = async () => {\n      try {\n        if (imageData !== null) {\n          const res = await postURL(imageData)\n          history.push(`/edit/${res.data.id}`)\n        }\n      } catch (err) {\n        console.log(err.response)\n      }\n    }\n    handlePost()\n  }, [imageData, history])\n\n  return (\n    <>\n      <UploadImage handleChange={handleImageChange} />\n    </>\n  )\n}\n\nexport default Home","import React from 'react'\n\n\nfunction LiveEffects({ liveChange, feedback, reset }) {\n\n  const handleChange = event => {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    liveChange({ ...feedback, [event.target.name]: event.target.type === 'checkbox' ? value : parseFloat(value) })\n  }\n\n\n  return (\n    <div className=\"live-effects-wrap\">\n      <div className=\"live-effects\">\n        <div className=\"sliders\">\n          <div className=\"field\">\n            <input\n              step=\"0.2\"\n              min=\"0\"\n              max=\"100\"\n              name=\"blur\"\n              value={feedback.blur}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Blur</label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              step=\"0.01\"\n              min=\"-1\"\n              max=\"1\"\n              name=\"brightness\"\n              value={feedback.brightness}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Brightness</label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              step=\"1\"\n              min=\"-80\"\n              max=\"100\"\n              name=\"contrast\"\n              value={feedback.contrast}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Contrast</label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              step=\"0.01\"\n              min=\"0\"\n              max=\"20\"\n              name=\"enhance\"\n              value={feedback.enhance}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Enhance</label>\n          </div>\n\n\n          <div className=\"field\">\n            <input\n              step=\"1\"\n              min=\"0\"\n              max=\"255\"\n              name=\"hue\"\n              value={feedback.hue}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Hue</label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              step=\"0.01\"\n              min=\"0\"\n              max=\"4\"\n              name=\"saturation\"\n              value={feedback.saturation}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Saturation</label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              step=\"0.01\"\n              min=\"-1\"\n              max=\"1\"\n              name=\"luminance\"\n              value={feedback.luminance}\n              onChange={handleChange}\n              type=\"range\">\n            </input>\n            <label className=\"label\">Luminance</label>\n          </div>\n\n\n          <div className=\"field display-none\">\n            <input\n              step=\"0.01\"\n              min=\"-2\"\n              max=\"2\"\n              name=\"embossStrength\"\n              value={feedback.embossStrength}\n              onChange={handleChange}\n              type=\"range\"\n            />\n            <label className=\"label\">Emboss Level</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default LiveEffects","import React from 'react'\n\n\nfunction LiveEffectsChecks({ liveChange, feedback }) {\n\n  const handleChange = event => {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    liveChange({ ...feedback, [event.target.name]: event.target.type === 'checkbox' ? value : parseFloat(value) })\n  }\n  return (\n    <div className=\"live-effects columns is-multiline\">\n      <div className=\"column checkboxes\">\n        <div className=\"column\">\n          <label className=\"label\">Sepia</label>\n          <input\n            type=\"checkbox\"\n            name=\"sepiaActive\"\n            checked={feedback.sepiaActive}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"column\">\n          <label className=\"label\">Invert</label>\n          <input\n            type=\"checkbox\"\n            name=\"invertActive\"\n            checked={feedback.invertActive}\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"column\">\n          <label className=\"label\">Grayscale</label>\n          <input\n            type=\"checkbox\"\n            name=\"grayscaleActive\"\n            checked={feedback.grayscaleActive}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"column\">\n          <label className=\"label\">Emboss</label>\n          <input\n            type=\"checkbox\"\n            name=\"embossActive\"\n            checked={feedback.embossActive}\n            onChange={handleChange}\n          /></div>\n      </div>\n      \n    </div>\n  )\n}\nexport default LiveEffectsChecks","import React, { useState, useEffect } from 'react'\nimport LoadingOverlay from 'react-loading-overlay'\nimport Loader from 'react-spinners/PropagateLoader'\n\nimport { getThumbnails, previewFilter } from '../../lib/api'\n\nfunction Filters({ url, handleImageChange, handleIconChange, setPreviewLoading }) {\n\n  const [thumbnails, setThumbnails] = useState([])\n  const [requestPage, setRequestPage] = useState(1)\n  const [filterType, setFilterType] = useState('sketch')\n  const [loading, setLoading] = useState(false)\n  const [leftArrowDisabled, setLeftArrowDisabled] = useState(true)\n  const [rightArrowDisabled, setRightArrowDisabled] = useState(false)\n\n\n  const changePage = (event) => {\n    if (filterType === 'sketch' && requestPage === 1 && event.currentTarget.value === 'right')\n      setLeftArrowDisabled(false)\n    if (filterType === 'sketch' && requestPage === 8 && event.currentTarget.value === 'right') setRightArrowDisabled(true)\n    if (filterType === 'sketch' && requestPage === 9 && event.currentTarget.value === 'left') setRightArrowDisabled(false)\n\n    if (filterType === 'histogram' && requestPage === 1 && event.currentTarget.value === 'right') setRightArrowDisabled(true)\n    if (requestPage === 2 && event.currentTarget.value === 'left') {\n      setRightArrowDisabled(false)\n      setLeftArrowDisabled(true)\n    }\n\n    if (event.currentTarget.value === 'left') {\n      setRequestPage(requestPage - 1)\n    } else {\n      setLeftArrowDisabled(false)\n      setRequestPage(requestPage + 1)\n    }\n    setLoading(true)\n  }\n\n  const changeFilterType = event => {\n    setRequestPage(1)\n    setLeftArrowDisabled(true)\n    setRightArrowDisabled(false)\n    setFilterType(event.target.value)\n    console.log(event.target.value)\n  }\n\n  useEffect(() => {\n    const sendThumbnailRequest = async () => {\n      setLoading(true)\n      try {\n        const response = await getThumbnails({ url: url, filter: filterType, page: requestPage })\n        setThumbnails(response.data)\n        setLoading(false)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    sendThumbnailRequest()\n  }, [url, requestPage, filterType])\n\n  const preview = async (event) => {\n    setPreviewLoading(true)\n    try {\n      const response = await previewFilter({ url: url, filter_type: filterType, filter_options: event.target.alt })\n      handleImageChange(response.data.image)\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"filters\">\n        {!loading\n          && (filterType !== 'collage'\n            && filterType !== 'emoji')\n          &&\n          <button\n            className={leftArrowDisabled ? 'button filter btn-page arrow-disabled' : 'button filter btn-page'}\n            value=\"left\"\n            onClick={leftArrowDisabled ? null : changePage}>\n            <i className=\"fas fa-chevron-left\"></i>\n          </button>}\n        {!loading && filterType !== 'emoji' && thumbnails.map(thumbnail => {\n          return (\n            <img \n              className=\"filter\" \n              src={thumbnail.image} \n              alt={thumbnail.option} \n              key={thumbnail.option} \n              onClick={preview} \n            />\n          )\n        })}\n\n        {!loading && filterType === 'emoji' && thumbnails.map(thumbnail => {\n          return (\n            <img\n              className=\"filter emoji-thumbs\"\n              src={thumbnail.image}\n              alt={thumbnail.option}\n              key={thumbnail.option}\n              draggable=\"true\"\n              onDragStart={event => {\n                handleIconChange(event.target.src)\n              }}\n            />\n          )\n        })}\n\n        {loading &&\n          <LoadingOverlay\n            className=\"loading\"\n            active={loading}\n            spinner={<Loader />}\n            styles={{\n              spinner: (base) => ({\n                ...base,\n                width: '50px',\n                '& svg circle': {\n                  stroke: 'rgba(0, 0, 0, 1)'\n                }\n              })\n            }}\n          >\n          </LoadingOverlay>\n        }\n        {!loading\n          && (filterType !== 'collage'\n            && filterType !== 'emoji')\n          &&\n          <button\n            className={rightArrowDisabled ? 'button btn-page filter arrow-disabled' : 'button btn-page filter'}\n            value=\"right\"\n            onClick={rightArrowDisabled ? null : changePage}>\n            <i className=\"fas fa-chevron-right\" value=\"right\"></i>\n          </button>}\n      </div>\n      <div className=\"filter-type\">\n        <button className={filterType === 'sketch' ? 'type-selected' : ''} onClick={changeFilterType} value=\"sketch\">Tint</button>\n        <button className={filterType === 'histogram' ? 'type-selected' : ''} onClick={changeFilterType} value=\"histogram\">Histogram</button>\n        <button className={filterType === 'collage' ? 'type-selected' : ''} onClick={changeFilterType} value=\"collage\">Artist Brush</button>\n        <button className={filterType === 'emoji' ? 'type-selected' : ''} onClick={changeFilterType} value=\"emoji\">Emoji</button>\n      </div>\n    </section>\n  )\n}\n\n\nexport default Filters","import React from 'react'\nimport { previewFilter } from '../../lib/api'\n\nfunction MemeView({ handleImageChange, image, handleClose, width, height, base64, id }) {\n  const [topText, setTopText] = React.useState('')\n  const [bottomText, setBottomText] = React.useState('')\n\n  const handleChange = (event) => {\n    event.target.name === 'topText' ? setTopText(event.target.value) : setBottomText(event.target.value)\n  }\n\n  const sendPostRequest = async () => {\n    const text = `${topText.toUpperCase()}©π${bottomText.toUpperCase()}`\n    let url\n    if (base64) {\n      url = `${id}&&${width}&&${height}&&${base64}`\n    } else {\n      url = image\n    }\n    const res = await previewFilter({ url: url, filter_type: 'meme', filter_options: text })\n    handleImageChange(res.data.image)\n  }\n\n  return (\n    <div className=\"MemeView\">\n      <div className=\"columns is-multiline meme\">\n        <div className=\"column right-meme columns is-multiline\">\n          <div className=\"field column is-full\">\n            <p onClick={handleClose}><i className=\"fas fa-times\"></i></p>\n          </div>\n          <div className=\"field column is-full\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              onChange={handleChange}\n              name=\"topText\"\n              value={topText}\n              placeholder=\"Enter top text\"\n            />\n          </div>\n          <div className=\"field column is-full\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              onChange={handleChange}\n              name=\"bottomText\"\n              value={bottomText}\n              placeholder=\"Enter bottom text\"\n            />\n          </div>\n          <div className=\"field column is-full\">\n            <div className=\"save-btn button\"\n              onClick={sendPostRequest}\n            >Meme it</div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default MemeView","import React from 'react'\nimport { triggerBase64Download } from 'react-base64-downloader'\nimport { imageUpload } from '../../lib/api'\nimport LoadingOverlay from 'react-loading-overlay'\nimport Loader from 'react-spinners/SyncLoader'\n\n\n\nconst uploadUrl = process.env.REACT_APP_IMAGE_UPLOAD_URL\nconst uploadPreset = process.env.REACT_APP_IMAGE_UPLOAD_PRESET\n\nfunction SaveImage({ imageData, height }) {\n  const [image, setImage] = React.useState('')\n  const [loading, setLoading] = React.useState(true)\n\n  const [embedCopySuccess, setEmbedCopySuccess] = React.useState(false)\n  const [urlCopySuccess, setUrlCopySuccess] = React.useState(false)\n  const embedRef = React.useRef(null)\n  const urlRef = React.useRef(null)\n\n  const copied = 'Copied!'\n\n  const handleUpload = async () => {\n    console.log('image upload ran')\n\n    try {\n      //setLoading(true)\n      const data = new FormData()\n      data.append('file', imageData)\n      data.append('upload_preset', uploadPreset)\n      const res = await imageUpload(uploadUrl, data)\n      setImage(res.data.secure_url)\n      setLoading(false)\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n\n  React.useEffect(() => {\n    handleUpload()\n    setLoading(true)\n  }, [imageData])\n\n\n  const copyToClipboard = (event) => {\n    if (event.target.name === 'embedCopyBtn') {\n      embedRef.current.select()\n      document.execCommand('copy')\n      setEmbedCopySuccess(true)\n      setTimeout(() => {\n        setEmbedCopySuccess(false)\n      }, 2000)\n    } else if (event.target.name === 'urlCopyBtn') {\n      urlRef.current.select()\n      document.execCommand('copy')\n      setUrlCopySuccess(true)\n      setTimeout(() => {\n        setUrlCopySuccess(false)\n      }, 2000)\n    }\n\n  }\n\n  console.log(embedCopySuccess)\n  return (\n    <div className=\"SaveImage\" style={{ height: height }}>\n      <div className=\"columns is-multiline save-options\">\n        <div className=\"field column is-full embed\">\n          <label className=\"label\">Embed</label>\n          {!loading && <input className=\"animate-this\" readOnly ref={embedRef} type=\"text\" name=\"embed\" value={`<img src=\"${image}\" title=\"Edited with Filtr\" alt=\"Edit your images with Filtr />`} />}\n          {!loading && <button className={embedCopySuccess ? 'button-animate' : 'animate-button'} name=\"embedCopyBtn\" onClick={copyToClipboard}>{embedCopySuccess ? 'Copied!' : 'Copy Embed Info'}</button>}\n          {loading &&\n            <LoadingOverlay\n              active={loading}\n              spinner={<Loader />}\n              styles={{\n                spinner: (base) => ({\n                  ...base,\n                  width: '100px',\n                  height: '100px',\n                  '& svg circle': {\n                    stroke: 'rgba(0, 0, 0, 1)'\n                  }\n                })\n              }}\n              className=\"loading\"\n            >\n            </LoadingOverlay>\n          }\n        </div>\n\n\n        <div className=\"field column is-full share\">\n          <label className=\"label\">Share</label>\n          {!loading && <input className=\"animate-this\" readOnly ref={urlRef} type=\"text\" name=\"url\" value={image} />}\n          {!loading && <button className={urlCopySuccess ? 'button-animate' : 'animate-button'} onClick={copyToClipboard} name=\"urlCopyBtn\">{urlCopySuccess ? 'Copied!' : 'Copy Link'}</button>}\n          {loading &&\n            <LoadingOverlay\n              active={loading}\n              spinner={<Loader />}\n              styles={{\n                spinner: (base) => ({\n                  ...base,\n                  width: '100px',\n                  height: '100px',\n                  '& svg circle': {\n                    stroke: 'rgba(0, 0, 0, 1)'\n                  }\n                })\n              }}\n              className=\"loading\"\n            >\n            </LoadingOverlay>\n          }\n        </div>\n        <div className=\"field column is-full download\">\n          <label className=\"label\">Or simply...</label>\n          <button onClick={() => triggerBase64Download(imageData, 'Filtr_image')}>Download</button>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default SaveImage","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getSingleImage } from '../../lib/api'\nimport LiveEffects from './LiveEffects'\nimport LiveEffectChecks from './LiveEffectChecks'\nimport Filters from './Filters'\nimport MemeView from './MemeView'\nimport { Stage, Layer, Image } from 'react-konva'\nimport Konva from 'konva'\nimport useImage from 'use-image'\nimport SaveImage from './SaveImage'\nimport LoadingOverlay from 'react-loading-overlay'\nimport Loader from 'react-spinners/PropagateLoader'\n\nconst URLImage = ({ image }) => {\n  const [img] = useImage(image.src)\n  return (\n    <Image\n      image={img}\n      x={image.x}\n      y={image.y}\n      height={40}\n      width={40}\n      draggable=\"true\"\n    />\n  )\n}\n\n\nfunction ImageEdit() {\n  const { id: imageId } = useParams()\n  const [image, setImage] = React.useState('')\n  const [b64, setB64] = React.useState(null)\n  const [width, setWidth] = React.useState(null)\n  const [height, setHeight] = React.useState(null)\n  const [url, setUrl] = React.useState('')\n  const [im] = useImage(url, 'anonymous')\n  const [dataURL, setDataURL] = React.useState('')\n  const [showSave, setShowSave] = React.useState(false)\n  const [showRevert, setShowRevert] = React.useState(false)\n  const [showUndoSaveBtns, setUndoSaveBtns] = React.useState(false)\n\n\n  const stageRef = React.useRef()\n  const imageRef = React.useRef()\n  const [images, setImages] = React.useState([])\n  const dragUrl = React.useRef()\n  const iconRef = React.useRef(null)\n  const [previewLoading, setPreviewLoading] = React.useState(false)\n\n\n  const [liveEffect, setliveEffect] = React.useState({\n    blur: 0,\n    brightness: 0,\n    embossStrength: 0.6,\n    embossActive: false,\n    grayscaleActive: false,\n    enhance: 0,\n    alpha: 1\n  })\n  const [appliedEffect, setAppliedEffect] = React.useState(true)\n  const defaultEffect = {\n    blur: 0,\n    brightness: 0,\n    embossStrength: 0.6,\n    embossActive: false,\n    grayscaleActive: false,\n    enhance: 0,\n    alpha: 1\n  }\n  const [meme, setMeme] = React.useState(false)\n\n  const revertButtonImage = 'https://res.cloudinary.com/dx8pt11io/image/upload/v1591890795/download_5_brgk58.png'\n  React.useEffect(() => {\n    const getImage = async () => {\n      try {\n        const res = await getSingleImage(imageId)\n        if (!image) setImage(res.data.url)\n        if (!height) setHeight(res.data.height)\n        if (!width) setWidth(res.data.width)\n        setUrl(res.data.url)\n      } catch (err) {\n        console.log(err.response)\n      }\n    }\n    getImage()\n  }, [imageId, height, image, width])\n\n  React.useEffect(() => {\n    if (im) {\n      // Copied from the Konva docs\n      imageRef.current.cache()\n      imageRef.current.getLayer().batchDraw()\n    }\n  }, [im])\n\n  const handleIconChange = ref => {\n    dragUrl.current = ref\n  }\n\n  React.useEffect(() => {\n    console.log(iconRef.current, 'Parent Component')\n  })\n\n  const imageChange = (image) => {\n    setUndoSaveBtns(true)\n    setB64(image)\n    setUrl(image)\n    setPreviewLoading(false)\n  }\n\n  const showOriginal = () => {\n    setUrl(image)\n    setAppliedEffect(false)\n    if (url === b64) setShowRevert(true)\n    console.log('mouse has entered')\n  }\n\n  const hideOriginal = () => {\n    setAppliedEffect(true)\n    setShowRevert(false)\n    setUrl(b64)\n    console.log('mouse has left')\n  }\n\n  const handleLiveChange = data => {\n    setliveEffect(data)\n    setUndoSaveBtns(true)\n  }\n\n  const resetEffects = () => {\n    setliveEffect(defaultEffect)\n    setUrl(image)\n    setImages([])\n    setB64('')\n    // setShowRevert(false)\n  }\n\n\n  const handleSaveImage = () => {\n    const dataURL = stageRef.current.toDataURL()\n    setDataURL(dataURL)\n  }\n  const enableMeme = () => {\n    setMeme(true)\n  }\n\n  const disableMeme = () => {\n    setMeme(false)\n  }\n\n  const RevertIcon = () => {\n    const [revertButton] = useImage(revertButtonImage)\n    return <Image\n      image={revertButton}\n      width={30}\n      height={30}\n      x={width - 40}\n      y={10}\n      onClick={() => {\n        resetEffects()\n        setImages([])\n      }}\n    />\n  }\n\n\n  return (\n    <div className=\"ImageEdit\">\n      <div className=\"box\">\n        <div className=\"image-filter-box\">\n          <div className={showSave ? 'btn-editing' : 'buttons'}>\n            {!showSave && <button className=\"btn-meme\" onClick={enableMeme}>Make it a Meme</button>}\n            {!showSave && showUndoSaveBtns && <button className=\"btn-reset\" onClick={resetEffects}>Reset</button>}\n            {!showSave && showUndoSaveBtns && <button className=\"button-process\" onClick={() => {\n              handleSaveImage()\n              setShowSave(true)\n            }}>Save Image\n            </button>\n            }\n            {showSave && <button className=\"button-process\" onClick={() => {\n              setShowSave(false)\n            }}>Get back to Edit\n            </button>}\n          </div>\n          <div className={showSave ? 'edit-box-save' : 'edit-box'}\n            onDrop={event => {\n              // register event position\n              stageRef.current.setPointersPositions(event)\n              // add image\n              setImages(\n                images.concat([\n                  {\n                    ...stageRef.current.getPointerPosition(),\n                    src: dragUrl.current\n                  }\n                ])\n              )\n            }}\n            onDragOver={event => event.preventDefault()}\n          >\n\n            <div className=\"image\">\n              {!previewLoading && <Stage\n                width={width}\n                height={height}\n                ref={stageRef}\n                id=\"stage\"\n              >\n\n                <Layer>\n                  <Image\n                    ref={imageRef}\n                    width={width}\n                    height={height}\n                    onMouseEnter={showOriginal}\n                    onMouseLeave={hideOriginal}\n                    x={0}\n                    y={0}\n                    image={im}\n                    filters={[\n                      Konva.Filters.Blur,\n                      Konva.Filters.Brighten,\n                      Konva.Filters.Contrast,\n                      Konva.Filters.Enhance,\n                      Konva.Filters.HSL,\n                      //Konva.Filters.Kaleidoscope,\n\n                      // * Have to pass the Konva filters a function even if they are not used to surpress warnings in the console.\n                      liveEffect.sepiaActive && appliedEffect ? Konva.Filters.Sepia : function () { },\n                      liveEffect.embossActive && appliedEffect ? Konva.Filters.Emboss : function () { },\n                      liveEffect.grayscaleActive && appliedEffect ? Konva.Filters.Grayscale : function () { },\n                      liveEffect.invertActive && appliedEffect ? Konva.Filters.Invert : function () { }\n\n                    ]}\n                    blurRadius={appliedEffect ? liveEffect.blur : defaultEffect.blur}\n                    brightness={appliedEffect ? liveEffect.brightness : defaultEffect.brightness}\n                    contrast={appliedEffect ? liveEffect.contrast : defaultEffect.contrast}\n                    embossStrength={appliedEffect ? liveEffect.embossStrength : defaultEffect.embossStrength}\n                    enhance={appliedEffect ? liveEffect.enhance : defaultEffect.enhance}\n                    hue={appliedEffect ? liveEffect.hue : defaultEffect.hue}\n                    saturation={appliedEffect ? liveEffect.saturation : defaultEffect.saturation}\n                    luminance={appliedEffect ? liveEffect.luminance : defaultEffect.luminance}\n                  />\n                  {images.map((image, i) => {\n                    return <URLImage key={i} image={image} />\n                  })}\n\n                  {/* {showRevert && <RevertIcon />} */}\n                </Layer>\n              </Stage>}\n              {previewLoading &&\n                <LoadingOverlay\n                  className=\"loading-image\"\n                  active={previewLoading}\n                  spinner={<Loader />}\n                  styles={{\n                    spinner: (base) => ({\n                      ...base,\n                      width: '50px',\n                      '& svg circle': {\n                        stroke: 'rgba(0, 0, 0, 1)'\n                      }\n                    })\n                  }}\n                >\n                </LoadingOverlay>\n              }\n            </div>\n\n            {!previewLoading && !showSave && <LiveEffectChecks liveChange={handleLiveChange} feedback={liveEffect} />}\n            {meme && !showSave && <MemeView width={width} height={height} image={image} handleImageChange={imageChange} handleClose={disableMeme} base64={b64} id={imageId} />}\n            {showSave && <SaveImage imageData={dataURL} height={height} />}\n          </div>\n          <div className=\"side-by-side\">\n            {!showSave && <LiveEffects liveChange={handleLiveChange} reset={resetEffects} feedback={liveEffect} />}\n            {!showSave && <Filters url={image} handleImageChange={imageChange} handleIconChange={handleIconChange} setPreviewLoading={setPreviewLoading} />}\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ImageEdit","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Navbar from './components/common/Navbar'\nimport Home from './components/common/Home'\nimport ImageEdit from './components/images/ImageEdit'\n\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/edit/:id\" component={ImageEdit} />\n      </Switch>\n    </BrowserRouter>\n\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}